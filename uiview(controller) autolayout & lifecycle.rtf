{\rtf1\ansi\ansicpg1252\cocoartf1404\cocoasubrtf470
{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fnil\fcharset0 AppleColorEmoji;}
{\colortbl;\red255\green255\blue255;\red53\green53\blue53;}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{decimal\}.}{\leveltext\leveltemplateid1\'02\'00.;}{\levelnumbers\'01;}\fi-360\li720\lin720 }{\listname ;}\listid1}
{\list\listtemplateid2\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{decimal\}.}{\leveltext\leveltemplateid101\'02\'00.;}{\levelnumbers\'01;}\fi-360\li720\lin720 }{\listname ;}\listid2}
{\list\listtemplateid3\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{hyphen\}}{\leveltext\leveltemplateid201\'01\uc0\u8259 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid3}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}{\listoverride\listid2\listoverridecount0\ls2}{\listoverride\listid3\listoverridecount0\ls3}}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab560
\pard\pardeftab560\partightenfactor0

\f0\b\fs34 \cf2 UIViewController Lifecycle & AutoLayout\
\pard\pardeftab560\slleading20\partightenfactor0

\b0\fs24 \cf2 (not using Storyboards)\
\pard\pardeftab560\slleading20\pardirnatural\partightenfactor0
\cf2 \
\
\pard\pardeftab560\pardirnatural\partightenfactor0
\ls1\ilvl0\cf2 {\listtext	1.	}loadView(): well yes, load the darn view pretty please. (optional! don\'92t override unless necessary because you for some reason don\'92t want everything wrapped in a UIView) 
\b Don\'92t call super.loadView!! Never!
\b0 \
{\listtext	2.	}viewDidLoad(): All variables have been initialized and you can start to set up the view hierarchy. Note that view.window is nil because we\'92re not on-screen yet! 
\b Do call super first thing!
\b0 \
{\listtext	3.	}viewWillAppear(): About to become visible. Around this time viewWillLayoutSubviews() is called and after that updateConstraints() will be sent to all subviews. Use viewWillAppear to optionally (re)load data and viewWillLayoutSubviews to layout the views!  
\b Do call super!
\b0 \
{\listtext	4.	}viewDidAppear(): on-screen! Yay  
\b Do call super!
\b0 \
{\listtext	5.	}viewWillDisappear(): you guessed it: about to be removed from screen.  
\b Do call super!
\b0 \
\pard\pardeftab560\slleading20\pardirnatural\partightenfactor0
\cf2 \
\pard\pardeftab560\pardirnatural\partightenfactor0

\b\fs34 \cf2 UIView:\
\pard\pardeftab560\slleading20\pardirnatural\partightenfactor0

\b0\fs24 \cf2 \
\pard\pardeftab560\pardirnatural\partightenfactor0
\ls2\ilvl0\cf2 {\listtext	1.	}init(frame:)\
{\listtext	2.	}intrinsicContentSize\
{\listtext	3.	}optionally override: updateConstraints (really why? idk)  
\b \cf2 Do call super last thing!
\b0 \cf2 \
{\listtext	4.	}draw(rect:) (only if needsDisplay==true)  
\b \cf2 Don\'92t call super obviously!
\b0 \cf2 \
\pard\pardeftab560\slleading20\pardirnatural\partightenfactor0
\cf2 UIView\'92s constraints will only be updated if there\'92s a need for it:\
\pard\pardeftab560\pardirnatural\partightenfactor0
\ls3\ilvl0\cf2 {\listtext	\uc0\u8259 	}needsUpdateConstraints (set using [myView setNeedsUpdateConstraints];)\
{\listtext	\uc0\u8259 	}or when the view is first created\
{\listtext	\uc0\u8259 	}or when the view moves to a superview\
{\listtext	\uc0\u8259 	}or when the ViewController gets sent viewWillLayoutSubviews (which happens at arbitrary times & amounts, mostly when screen is rotated.)\
\pard\pardeftab560\slleading20\partightenfactor0
\cf2 Likewise the draw(rect:) method isn\'92t called every frame for a UIView, only the first time it gets on screen & afterwards if you call [myView setNeedsDisplay]; (or the bounds change because of updated constraints 
\f1 \uc0\u55357 \u56841 
\f0 )}